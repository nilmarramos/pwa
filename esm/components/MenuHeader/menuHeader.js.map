{"version":3,"sources":["../../../src/components/MenuHeader/menuHeader.js"],"names":["React","PureComponent","connect","compose","classify","getAllCategories","CategoryTree","MenuHeader","isCreateAccountOpen","isForgotPasswordOpen","rootNodeId","currentPath","path","split","reverse","parseInt","setState","getDerivedStateFromProps","props","state","rootCategoryId","componentDidMount","categoryTree","setCurrentPath","render","mapStateToProps","catalog","categories","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,OAAT;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,QAAP;AAEA,SAASC,gBAAT;AACA,OAAOC,YAAP;;AAEA,MAAMC,UAAN,SAAyBN,aAAzB,CAAuC;AAAA;AAAA;;AAAA,mCAE7B;AACNO,MAAAA,mBAAmB,EAAE,KADf;AAENC,MAAAA,oBAAoB,EAAE,KAFhB;AAGNC,MAAAA,UAAU,EAAE,IAHN;AAINC,MAAAA,WAAW,EAAE;AAJP,KAF6B;;AAAA,4CAwBpBA,WAAW,IAAI;AAC9B,YAAMC,IAAI,GAAGD,WAAW,CAACE,KAAZ,CAAkB,GAAlB,EAAuBC,OAAvB,EAAb;AACA,YAAMJ,UAAU,GAAGK,QAAQ,CAACH,IAAI,CAAC,CAAD,CAAL,CAA3B;AAEA,WAAKI,QAAL,CAAc,OAAO;AACnBN,QAAAA,UAAU,EAAEA,UADO;AAEnBC,QAAAA,WAAW,EAAEC;AAFM,OAAP,CAAd;AAID,KAhCoC;AAAA;;AASrC,SAAOK,wBAAP,CAAgCC,KAAhC,EAAuCC,KAAvC,EAA8C;AAC5C,QAAI,CAACA,KAAK,CAACT,UAAP,IAAqBQ,KAAK,CAACE,cAA/B,EAA+C;AAC7C,+BACKD,KADL;AAEET,QAAAA,UAAU,EAAEQ,KAAK,CAACE;AAFpB;AAID;;AAED,WAAOD,KAAP;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWb,gBAAX;AACD;;AAYD,MAAIiB,YAAJ,GAAmB;AACjB,UAAM;AAAEJ,MAAAA,KAAF;AAASK,MAAAA,cAAT;AAAyBJ,MAAAA;AAAzB,QAAmC,IAAzC;AACA,UAAM;AAAET,MAAAA;AAAF,QAAiBS,KAAvB;AAEA,WAAOT,UAAU,GACf,oBAAC,YAAD;AACE,MAAA,UAAU,EAAEQ,KAAK,CAACE,cADpB;AAEE,MAAA,SAAS,EAAEV,UAFb;AAGE,MAAA,gBAAgB,EAAEa;AAHpB,MADe,GAMb,IANJ;AAOD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJF,MAAAA;AADI,QAEF,IAFJ;AAIA,WACI,0CACGA,YADH,CADJ;AAKD;;AA1DoC;;AA4DvC,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACvC,QAAM;AAAEC,IAAAA,UAAF;AAAcP,IAAAA;AAAd,MAAiCM,OAAvC;AACA,SAAO;AACLC,IAAAA,UADK;AAELP,IAAAA;AAFK,GAAP;AAID,CAND;;AAQA,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA;AADsC,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CACpBC,QAAQ,EADY,EAEpBF,OAAO,CACLuB,eADK,EAELG,kBAFK,CAFa,CAAP,CAMbrB,UANa,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { connect } from 'src/drivers';\nimport { compose } from 'redux';\nimport classify from 'src/classify';\n\nimport { getAllCategories } from 'src/actions/catalog';\nimport CategoryTree from './categoryTree';\n\nclass MenuHeader extends PureComponent {\n\n  state = {\n    isCreateAccountOpen: false,\n    isForgotPasswordOpen: false,\n    rootNodeId: null,\n    currentPath: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (!state.rootNodeId && props.rootCategoryId) {\n      return {\n        ...state,\n        rootNodeId: props.rootCategoryId\n      };\n    }\n\n    return state;\n  }\n\n  componentDidMount() {\n    this.props.getAllCategories();\n  }\n\n  setCurrentPath = currentPath => {\n    const path = currentPath.split('/').reverse();\n    const rootNodeId = parseInt(path[0]);\n\n    this.setState(() => ({\n      rootNodeId: rootNodeId,\n      currentPath: path\n    }));\n  };\n\n  get categoryTree() {\n    const { props, setCurrentPath, state } = this;\n    const { rootNodeId } = state;\n\n    return rootNodeId ? (\n      <CategoryTree\n        rootNodeId={props.rootCategoryId}\n        currentId={rootNodeId}\n        updateRootNodeId={setCurrentPath}\n      />\n    ) : null;\n  }\n\n\n  render() {\n    const {\n      categoryTree,\n    } = this;\n\n    return (\n        <>\n          {categoryTree}\n        </>\n    );\n  }\n}\nconst mapStateToProps = ({ catalog }) => {\n  const { categories, rootCategoryId } = catalog;\n  return {\n    categories,\n    rootCategoryId\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getAllCategories,\n});\n\nexport default compose(\n  classify(),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(MenuHeader);\n\n"],"file":"menuHeader.js"}