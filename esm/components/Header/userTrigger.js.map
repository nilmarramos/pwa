{"version":3,"sources":["../../../src/components/Header/userTrigger.js"],"names":["React","Component","connect","compose","PropTypes","toggleCart","toggleDrawer","toggleSignin","Icon","UserIcon","classify","defaultClasses","isEmptyCartVisible","isMiniCartMaskOpen","Trigger","props","openSignin","openNav","cartIcon","render","classes","root","teste","children","node","shape","string","func","isRequired","itemsQty","number","mapStateToProps","state","isSignInOpen","app","isCartEmpty","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT;AACA,SAASC,YAAT,EAAuBC,YAAvB;AAEA,OAAOC,IAAP;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP;AACA,OAAOC,cAAP;AACA,SAAQC,kBAAR,EAA4BC,kBAA5B;AAEA,OAAO,MAAMC,OAAN,SAAsBb,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mCAe3B,MAAM;AACV,WAAKc,KAAL,CAAWC,UAAX;AACA,WAAKD,KAAL,CAAWE,OAAX;AACH,KAlBkC;AAAA;;AAUnC,MAAIC,QAAJ,GAAe;AAEX,WAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAET;AAAX,MAAP;AACH;;AAODU,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA;AADE,QAEF,KAAKL,KAFT;AAGA,UAAM;AAAEG,MAAAA;AAAF,QAAe,IAArB;AAEA,WACI;AACI,MAAA,SAAS,EAAEE,OAAO,CAACC,IADvB;AAEI,oBAAW,aAFf;AAGI,MAAA,OAAO,EAAE,KAAKC;AAHlB,OAKKJ,QALL,CADJ;AASH;;AAnCkC;;gBAA1BJ,O,eACU;AACfS,EAAAA,QAAQ,EAAEnB,SAAS,CAACoB,IADL;AAEfJ,EAAAA,OAAO,EAAEhB,SAAS,CAACqB,KAAV,CAAgB;AACrBJ,IAAAA,IAAI,EAAEjB,SAAS,CAACsB;AADK,GAAhB,CAFM;AAKfrB,EAAAA,UAAU,EAAED,SAAS,CAACuB,IAAV,CAAeC,UALZ;AAMfC,EAAAA,QAAQ,EAAEzB,SAAS,CAAC0B;AANL,C;;AAqCvB,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAK,CAACE,GAA/B;AAEA,SAAO;AACHD,IAAAA,YADG;AAEHE,IAAAA,WAAW,EAAEvB,kBAAkB,CAACoB,KAAD,CAF5B;AAGHnB,IAAAA,kBAAkB,EAAEA,kBAAkB,CAACmB,KAAD;AAHnC,GAAP;AAKH,CARD;;AAUA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpChC,EAAAA,UADoC;AAEpCY,EAAAA,OAAO,EAAE,MAAMoB,QAAQ,CAAC/B,YAAY,CAAC,KAAD,CAAb,CAFa;AAGpCU,EAAAA,UAAU,EAAE,MAAMqB,QAAQ,CAAC9B,YAAY,CAAC,IAAD,CAAb;AAHU,CAAL,CAAnC;;AAMA,eAAeJ,OAAO,CAClBO,QAAQ,CAACC,cAAD,CADU,EAElBT,OAAO,CACH6B,eADG,EAEHK,kBAFG,CAFW,CAAP,CAMbtB,OANa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'src/drivers';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport { toggleCart } from 'src/actions/cart';\nimport { toggleDrawer, toggleSignin } from 'src/actions/app';\n\nimport Icon from 'src/components/Icon';\nimport UserIcon from 'react-feather/dist/icons/user';\nimport classify from 'src/classify';\nimport defaultClasses from './userTrigger.css';\nimport {isEmptyCartVisible, isMiniCartMaskOpen} from \"../../selectors/cart\";\n\nexport class Trigger extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        classes: PropTypes.shape({\n            root: PropTypes.string\n        }),\n        toggleCart: PropTypes.func.isRequired,\n        itemsQty: PropTypes.number\n    };\n\n    get cartIcon() {\n\n        return <Icon src={UserIcon} />;\n    }\n\n    teste = () => {\n        this.props.openSignin()\n        this.props.openNav()\n    }\n\n    render() {\n        const {\n            classes,\n        } = this.props;\n        const { cartIcon } = this;\n\n        return (\n            <button\n                className={classes.root}\n                aria-label=\"Toggle user\"\n                onClick={this.teste}\n            >\n                {cartIcon}\n            </button>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { isSignInOpen } = state.app;\n\n    return {\n        isSignInOpen,\n        isCartEmpty: isEmptyCartVisible(state),\n        isMiniCartMaskOpen: isMiniCartMaskOpen(state)\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    toggleCart,\n    openNav: () => dispatch(toggleDrawer('nav')),\n    openSignin: () => dispatch(toggleSignin(true))\n});\n\nexport default compose(\n    classify(defaultClasses),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )\n)(Trigger);\n"],"file":"userTrigger.js"}