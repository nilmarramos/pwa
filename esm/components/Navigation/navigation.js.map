{"version":3,"sources":["../../../src/components/Navigation/navigation.js"],"names":["React","PureComponent","bool","func","object","shape","string","connect","compose","classify","Button","CreateAccount","SignIn","ForgotPassword","CategoryTree","NavHeader","defaultClasses","MyAccountMenuTrigger","toggleDrawer","toggleSignin","Trigger","toggleCart","isEmptyCartVisible","isMiniCartMaskOpen","Navigation","isCreateAccountOpen","isForgotPasswordOpen","rootNodeId","currentPath","createAccount","className","props","email","state","defaultUsername","showCreateAccountForm","forgotPassword","completePasswordReset","resetPassword","isInProgress","closeForgotPassword","showForgotPasswordForm","closeDrawer","hideForgotPasswordForm","hideSignInForm","openSignin","nextDefaultUsername","setState","path","split","reverse","parseInt","parentId","length","rootCategoryId","shift","getDerivedStateFromProps","componentDidMount","getUserDetails","getAllCategories","categoryTree","setCurrentPath","footer","classes","isSignedIn","signInForm","isSignInOpen","isOpen","signIn_open","signIn_closed","setCreateAccountForm","setDefaultUsername","setForgotPasswordForm","createAccountForm","form_open","form_closed","forgotPasswordForm","render","hideCreateAccountForm","setRootNodeIdToParent","root_open","root","isTopLevel","handleBack","title","header","body","authBar","isRequired","firstname","lastname","signInError","mapStateToProps","app","mapDispatchToProps","dispatch","bol"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { bool, func, object, shape, string } from 'prop-types';\n\nimport { connect } from 'src/drivers';\nimport { compose } from 'redux';\nimport classify from 'src/classify';\nimport Button from 'src/components/Button';\nimport CreateAccount from 'src/components/CreateAccount';\nimport SignIn from 'src/components/SignIn';\nimport ForgotPassword from 'src/components/ForgotPassword';\nimport CategoryTree from './categoryTree';\nimport NavHeader from './navHeader';\nimport defaultClasses from './navigation.css';\nimport { MyAccountMenuTrigger } from '../MyAccountMenuPage';\n\nimport {toggleDrawer, toggleSignin} from 'src/actions/app';\nimport {Trigger} from \"../Header/userTrigger\";\nimport {toggleCart} from \"../../actions/cart\";\nimport {isEmptyCartVisible, isMiniCartMaskOpen} from \"../../selectors/cart\";\n\nclass Navigation extends PureComponent {\n    static propTypes = {\n        classes: shape({\n            authBar: string,\n            body: string,\n            form_closed: string,\n            form_open: string,\n            footer: string,\n            header: string,\n            root: string,\n            root_open: string,\n            signIn_closed: string,\n            signIn_open: string\n        }),\n        closeDrawer: func.isRequired,\n        completePasswordReset: func.isRequired,\n        createAccount: func.isRequired,\n        email: string,\n        firstname: string,\n        forgotPassword: shape({\n            email: string,\n            isInProgress: bool\n        }),\n        getAllCategories: func.isRequired,\n        getUserDetails: func.isRequired,\n        isOpen: bool,\n        isSignedIn: bool,\n        lastname: string,\n        resetPassword: func.isRequired,\n        signInError: object\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (!state.rootNodeId && props.rootCategoryId) {\n            return {\n                ...state,\n                rootNodeId: props.rootCategoryId\n            };\n        }\n\n        return state;\n    }\n\n    componentDidMount() {\n        this.props.getUserDetails();\n        this.props.getAllCategories();\n    }\n\n    state = {\n        isCreateAccountOpen: false,\n        isForgotPasswordOpen: false,\n        rootNodeId: null,\n        currentPath: null\n    };\n\n    get categoryTree() {\n        const { props, setCurrentPath, state } = this;\n        const { rootNodeId } = state;\n        const { closeDrawer } = props;\n\n        return rootNodeId ? (\n            <CategoryTree\n                rootNodeId={props.rootCategoryId}\n                currentId={rootNodeId}\n                updateRootNodeId={setCurrentPath}\n                onNavigate={closeDrawer}\n            />\n        ) : null;\n    }\n\n    get footer() {\n        const { classes } = this.props;\n\n        return !this.props.isSignedIn ? (\n            ''\n        ) : (\n            <MyAccountMenuTrigger />\n        );\n    }\n\n    get signInForm() {\n        const { classes, isSignedIn, isSignInOpen } = this.props;\n        const isOpen = !isSignedIn && isSignInOpen;\n        const className = isOpen ? classes.signIn_open : classes.signIn_closed;\n\n        return (\n            <div className={className}>\n                <SignIn\n                    showCreateAccountForm={this.setCreateAccountForm}\n                    setDefaultUsername={this.setDefaultUsername}\n                    onForgotPassword={this.setForgotPasswordForm}\n                />\n            </div>\n        );\n    }\n\n    createAccount = () => {};\n\n    setCreateAccountForm = () => {\n        /*\n        When the CreateAccount component mounts, its email input will be set to\n        the value of the SignIn component's email input.\n        Inform's initialValue is set on component mount.\n        Once the create account button is dirtied, always render the CreateAccount\n        Component to show animation.\n        */\n        this.createAccount = className => {\n            return (\n                <div className={className}>\n                    <CreateAccount\n                        onSubmit={this.props.createAccount}\n                        initialValues={{ email: this.state.defaultUsername }}\n                    />\n                </div>\n            );\n        };\n        this.showCreateAccountForm();\n    };\n\n    forgotPassword = () => {};\n\n    /*\n     * When the ForgotPassword component is mounted, its email input will be set to\n     * the value of the SignIn component's email input.\n     * Our common Input component handles initialValue only when component is mounted.\n     */\n    setForgotPasswordForm = () => {\n        this.forgotPassword = className => {\n            const {\n                completePasswordReset,\n                forgotPassword,\n                resetPassword\n            } = this.props;\n            const { email, isInProgress } = forgotPassword;\n\n            return (\n                <div className={className}>\n                    <ForgotPassword\n                        completePasswordReset={completePasswordReset}\n                        email={email}\n                        initialValues={{ email: this.state.defaultUsername }}\n                        isInProgress={isInProgress}\n                        onClose={this.closeForgotPassword}\n                        resetPassword={resetPassword}\n                    />\n                </div>\n            );\n        };\n        this.showForgotPasswordForm();\n    };\n\n    closeForgotPassword = () => {\n        this.props.closeDrawer();\n        this.hideForgotPasswordForm();\n        this.hideSignInForm();\n    };\n\n    get createAccountForm() {\n        const { isCreateAccountOpen } = this.state;\n        const { classes, isSignedIn } = this.props;\n        const isOpen = !isSignedIn && isCreateAccountOpen;\n        const className = isOpen ? classes.form_open : classes.form_closed;\n\n        return this.createAccount(className);\n    }\n\n    get forgotPasswordForm() {\n        const { isForgotPasswordOpen } = this.state;\n        const { classes, isSignedIn } = this.props;\n        const isOpen = !isSignedIn && isForgotPasswordOpen;\n        const className = isOpen ? classes.form_open : classes.form_closed;\n\n        return this.forgotPassword(className);\n    }\n\n    showSignInForm = () => {\n        this.props.openSignin(true)\n    };\n\n    hideSignInForm = () => {\n        this.props.openSignin(false)\n    };\n\n    setDefaultUsername = nextDefaultUsername => {\n        this.setState(() => ({ defaultUsername: nextDefaultUsername }));\n    };\n\n    showCreateAccountForm = () => {\n        this.setState(() => ({\n            isCreateAccountOpen: true\n        }));\n    };\n\n    showForgotPasswordForm = () => {\n        this.setState(() => ({\n            isForgotPasswordOpen: true\n        }));\n    };\n\n    hideCreateAccountForm = () => {\n        this.setState(() => ({\n            isCreateAccountOpen: false\n        }));\n    };\n\n    hideForgotPasswordForm = () => {\n        this.setState(() => ({\n            isForgotPasswordOpen: false\n        }));\n    };\n\n    setCurrentPath = currentPath => {\n        const path = currentPath.split('/').reverse();\n        const rootNodeId = parseInt(path[0]);\n\n        this.setState(() => ({\n            rootNodeId: rootNodeId,\n            currentPath: path\n        }));\n    };\n\n    setRootNodeIdToParent = () => {\n        const path = this.state.currentPath;\n        const parentId =\n            path.length > 1 ? parseInt(path[1]) : this.props.rootCategoryId;\n        path.shift();\n\n        this.setState(() => ({\n            rootNodeId: parentId,\n            currentPath: path\n        }));\n    };\n\n    render() {\n        const {\n            categoryTree,\n            createAccountForm,\n            footer,\n            hideCreateAccountForm,\n            hideSignInForm,\n            setRootNodeIdToParent,\n            signInForm,\n            forgotPasswordForm,\n            hideForgotPasswordForm,\n            props,\n            state\n        } = this;\n\n        const { isSignInOpen } = this.props;\n\n\n        const {\n            isCreateAccountOpen,\n            isForgotPasswordOpen,\n            rootNodeId\n        } = state;\n        const {\n            classes,\n            closeDrawer,\n            isOpen,\n            isSignedIn,\n            rootCategoryId\n        } = props;\n        const className = isOpen ? classes.root_open : classes.root;\n        const isTopLevel = !rootNodeId || rootNodeId === rootCategoryId;\n\n        const handleBack =\n            isCreateAccountOpen && !isSignedIn\n                ? hideCreateAccountForm\n                : isForgotPasswordOpen\n                ? hideForgotPasswordForm\n                : isSignInOpen && !isSignedIn\n                ? hideSignInForm\n                : isTopLevel\n                ? closeDrawer\n                : setRootNodeIdToParent;\n\n        const title =\n            isCreateAccountOpen && !isSignedIn\n                ? 'Create Account'\n                : isForgotPasswordOpen\n                ? 'Forgot password'\n                : isSignInOpen && !isSignedIn\n                ? 'Sign In'\n                : 'Main Menu';\n\n        return (\n            <aside className={className}>\n                <div className={classes.header}>\n                    <NavHeader\n                        title={title}\n                        onBack={handleBack}\n                        onClose={closeDrawer}\n                    />\n                </div>\n                <nav className={classes.body}>{categoryTree}</nav>\n                <div className={classes.footer}>{footer}</div>\n                {signInForm}\n                {createAccountForm}\n                {forgotPasswordForm}\n            </aside>\n        );\n    }\n}\nconst mapStateToProps = ({ app }) => {\n    const { isSignInOpen } = app;\n\n    return {\n        isSignInOpen\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    toggleCart,\n    openSignin: (bol) => dispatch(toggleSignin(bol))\n});\n\nexport default compose(\n  classify(defaultClasses),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Navigation);\n\n"],"file":"navigation.js"}